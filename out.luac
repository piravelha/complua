
_G["#COMPLUA"] = _G["#COMPLUA"] or {}
_G["#COMPLUA"].serialize = function(value)
    local _serialize = _G["#COMPLUA"].serialize
    if type(value) == "string" then
        return '"' .. value .. '"'
    end
    if type(value) == "table" then
        local mt = getmetatable(value) or {}
        local s = "setmetatable({"
        local i = 0
        for k, v in pairs(value) do
            if i > 0 then
                s = s .. ", "
            end
            s = s .. "["
                .. _serialize(k)
                .. "] ="
                .. _serialize(v)
            i = i + 1
        end
        return s .. "}, {})"
    end
    if type(value) == "function" then
        local bs = string.dump(value)
        local s = "load(string.char("
        for i = 1, #bs do
            if i > 1 then
                s = s .. ", "
            end
            s = s .. string.byte(bs, i)
        end
        return s .. "))"
    end
    return tostring(value)
end

local x
--LINE:2
 = 5
--LINE:2
;
--LINE:2

local y
--LINE:3
 = print("oh no")
--LINE:3

--LINE:3
;
--LINE:3

local z
--LINE:4
 = (x + 5)
--LINE:4

--LINE:4
;
--LINE:4

(function()
        __expr = setmetatable({}, {})
        return load(string.char(27, 76, 74, 2, 8, 17, 64, 46, 47, 46, 99, 111, 109, 112, 108, 117, 97, 47, 46, 101, 118, 97, 108, 40, 0, 0, 3, 0, 2, 0, 3, 4, 47, 2, 54, 0, 0, 0, 54, 2, 1, 0, 68, 0, 2, 0, 11, 95, 95, 101, 120, 112, 114, 11, 117, 110, 112, 97, 99, 107, 1, 1, 1, 0, 0))()
    end)()
    
--LINE:5


--LINE:2
